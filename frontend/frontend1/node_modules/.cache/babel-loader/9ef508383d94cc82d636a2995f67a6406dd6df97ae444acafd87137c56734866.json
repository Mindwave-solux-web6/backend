{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD55C\\uC9C0\\uB098\\\\Desktop\\\\study_B\\\\\\uC2E4\\uC2B5\\\\wave\\\\frontend\\\\frontend1\\\\src\\\\components\\\\SignUp.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n\n// const SignUp = () => {\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [passwordsMatch, setPasswordsMatch] = useState(true);\n\n//   const handlePasswordChange = (event) => {\n//     setPassword(event.target.value);\n//   };\n\n//   const handleConfirmPasswordChange = (event) => {\n//     setConfirmPassword(event.target.value);\n//   };\n\n//   const handlePasswordFormSubmit = (event) => {\n//     event.preventDefault(); //추가\n//     // 비밀번호와 비밀번호 확인이 일치하는지 확인합니다.\n//     const passwordsMatch = password === confirmPassword;\n\n//     setPasswordsMatch(passwordsMatch);\n//     if (passwordsMatch == true) {\n//       event.target.submit();\n//     } else {\n//       event.preventDefault();\n//     }\n//   };\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordsMatch, setPasswordsMatch] = useState(true);\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n  const handleNicknameChange = event => {\n    setNickname(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleConfirmPasswordChange = event => {\n    setConfirmPassword(event.target.value);\n  };\n  const submitSignUp = async event => {\n    event.preventDefault();\n    const passwordsMatch = password === confirmPassword;\n    setPasswordsMatch(passwordsMatch);\n    if (passwordsMatch) {\n      try {\n        const response = await axios.post(\"http://127.0.0.1:8080/api/members/signup\", {\n          email: email,\n          password: password,\n          name: name,\n          nickname: nickname\n        }, {\n          withCredentials: true // CORS 에러 해결을 위해 withCredentials를 설정합니다.\n        });\n\n        // 서버에서 온 응답 처리\n        console.log(\"회원가입 성공!\", response);\n        // 여기서 성공 시의 처리를 추가하거나, 다른 페이지로 이동시킬 수 있습니다.\n      } catch (error) {\n        console.error(\"회원가입 실패!\", error.response);\n        // 여기서 에러 시의 처리를 추가하거나, 에러 메시지를 보여줄 수 있습니다.\n      }\n    }\n    // if (passwordsMatch) {\n    //   await fetch(\"http://127.0.0.1:8080/api/members/signup\", {\n    //     method: \"POST\",\n    //     mode:\"cors\",\n    //     credentials: \"include\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       \"Access-Control-Allow-Origin\": \"*\",\n    //     },\n    //     body: JSON.stringify({\n    //       email: email,\n    //       password: password,\n    //       name: name,\n    //       nickname: nickname,\n    //     }),\n    //   });\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"masthead\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"signup\",\n      className: \"mt-7\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"sign-divider-light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mt-0 text-white\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"sign-divider-light mb-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row gx-4 gx-lg-5 justify-content-center mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"signup\",\n            onSubmit: submitSignUp,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                id: \"name\",\n                name: \"name\" // name 속성을 추가해야 서버에서 구분할 수 있습니다.\n                ,\n                type: \"text\",\n                placeholder: \"Enter your name...\",\n                required: true,\n                value: name // 값을 state 변수로 설정해줍니다.\n                ,\n                onChange: handleNameChange // name 값이 변경될 때마다 state 변수를 업데이트합니다.\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Full name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                \"data-sb-feedback\": \"name:required\",\n                children: \"A name is required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                id: \"email\",\n                name: \"email\" // name 속성을 추가해야 서버에서 구분할 수 있습니다.\n                ,\n                type: \"email\",\n                placeholder: \"Enter your Email...\",\n                required: true,\n                value: email // 값을 state 변수로 설정해줍니다.\n                ,\n                onChange: handleEmailChange // name 값이 변경될 때마다 state 변수를 업데이트합니다.\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                \"data-sb-feedback\": \"email:required\",\n                children: \"An email is required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                \"data-sb-feedback\": \"email:email\",\n                children: \"Email is not valid.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                id: \"nickname\",\n                name: \"nickname\" // name 속성을 추가해야 서버에서 구분할 수 있습니다.\n                ,\n                type: \"text\",\n                placeholder: \"Enter your ID...\",\n                required: true,\n                value: nickname // 값을 state 변수로 설정해줍니다.\n                ,\n                onChange: handleNicknameChange // name 값이 변경될 때마다 state 변수를 업데이트합니다.\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"nickname\",\n                children: \"NICKNAME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                \"data-sb-feedback\": \"id:required\",\n                children: \"An ID is required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                id: \"password\",\n                name: \"password\" // name 속성을 추가해야 서버에서 구분할 수 있습니다.\n                ,\n                type: \"password\",\n                placeholder: \"Enter your password...\",\n                value: password,\n                onChange: handlePasswordChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                \"data-sb-feedback\": \"password:required\",\n                children: \"A password is required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                id: \"confirmPassword\",\n                name: \"confirmPassword\" // name 속성을 추가해야 서버에서 구분할 수 있습니다.\n                ,\n                type: \"password\",\n                placeholder: \"Enter your password again...\",\n                value: confirmPassword,\n                onChange: handleConfirmPasswordChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirmPassword\",\n                children: \"Password Check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                \"data-sb-feedback\": \"confirmPassword:required\",\n                children: \"A password is required.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), !passwordsMatch && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white text-center\",\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uC640 \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\\uC774 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary btn-xl\",\n                id: \"submitButton\",\n                type: \"submit\",\n                children: \"Sign Up !\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-white\",\n            children: [\"\\uC774\\uBBF8 \\uACC4\\uC815\\uC774 \\uC788\\uB2E4\\uBA74\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n              className: \"text-center text-white\",\n              to: \"/signin\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-right-to-bracket\",\n                style: {\n                  color: \"#ffffff\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), \"\\xA0\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this)\n\n  // <header className=\"masthead\">\n  //   <section id=\"signup\" className=\"mt-7\">\n  //     <hr className=\"sign-divider-light\" />\n  //     <h2 className=\"text-center mt-0 text-white\">Sign Up</h2>\n  //     <hr className=\"sign-divider-light mb-5\" />\n\n  //     <div className=\"row gx-4 gx-lg-5 justify-content-center mb-5\">\n  //       <div className=\"col-lg-4\">\n  //         <form id=\"signup\" onSubmit={submitSignUp}>\n  //           {/* ID input */}\n  //           <div className=\"form-floating mb-3\">\n  //             <input\n  //               className=\"form-control\"\n  //               id=\"name\"\n  //               type=\"text\"\n  //               placeholder=\"Enter your name...\"\n  //               required\n  //             />\n  //             <label htmlFor=\"name\">Full name</label>\n  //             <div\n  //               className=\"invalid-feedback\"\n  //               data-sb-feedback=\"name:required\"\n  //             >\n  //               A name is required.\n  //             </div>\n  //           </div>\n\n  //           {/* EMAIL input */}\n  //           <div className=\"form-floating mb-3\">\n  //             <input\n  //               className=\"form-control\"\n  //               id=\"email\"\n  //               type=\"email\"\n  //               placeholder=\"Enter your Email...\"\n  //               required\n  //             />\n  //             <label htmlFor=\"email\">Email address</label>\n  //             <div\n  //               className=\"invalid-feedback\"\n  //               data-sb-feedback=\"email:required\"\n  //             >\n  //               An email is required.\n  //             </div>\n  //             <div\n  //               className=\"invalid-feedback\"\n  //               data-sb-feedback=\"email:email\"\n  //             >\n  //               Email is not valid.\n  //             </div>\n  //           </div>\n\n  //           {/* ID input */}\n  //           <div className=\"form-floating mb-3\">\n  //             <input\n  //               className=\"form-control\"\n  //               id=\"id\"\n  //               type=\"text\"\n  //               placeholder=\"Enter your ID...\"\n  //               required\n  //             />\n  //             <label htmlFor=\"id\">ID</label>\n  //             <div\n  //               className=\"invalid-feedback\"\n  //               data-sb-feedback=\"id:required\"\n  //             >\n  //               An ID is required.\n  //             </div>\n  //           </div>\n\n  //           {/* PASSWORD input */}\n  //           <div className=\"form-floating mb-3\">\n  //             <input\n  //               className=\"form-control\"\n  //               id=\"password\"\n  //               type=\"password\"\n  //               placeholder=\"Enter your password...\"\n  //               value={password}\n  //               onChange={handlePasswordChange}\n  //               required\n  //             />\n  //             <label htmlFor=\"password\">Password</label>\n  //             <div\n  //               className=\"invalid-feedback\"\n  //               data-sb-feedback=\"password:required\"\n  //             >\n  //               A password is required.\n  //             </div>\n  //           </div>\n\n  //           {/* PASSWORD CONFIRM input */}\n  //           <div className=\"form-floating mb-3\">\n  //             <input\n  //               className=\"form-control\"\n  //               id=\"confirmPassword\"\n  //               type=\"password\"\n  //               placeholder=\"Enter your password again...\"\n  //               value={confirmPassword}\n  //               onChange={handleConfirmPasswordChange}\n  //               required\n  //             />\n  //             <label htmlFor=\"confirmPassword\">Password Check</label>\n  //             <div\n  //               className=\"invalid-feedback\"\n  //               data-sb-feedback=\"confirmPassword:required\"\n  //             >\n  //               A password is required.\n  //             </div>\n  //           </div>\n\n  //           {!passwordsMatch && (\n  //             <p className=\"text-white text-center\">\n  //               비밀번호와 비밀번호 확인이 일치하지 않습니다.\n  //             </p>\n  //           )}\n\n  //           {/* SUBMIT button */}\n  //           <div className=\"d-grid\">\n  //             <button\n  //               className=\"btn btn-primary btn-xl\"\n  //               id=\"submitButton\"\n  //               type=\"submit\"\n  //             >\n  //               Sign Up !\n  //             </button>\n  //           </div>\n  //         </form>{\" \"}\n  //         <br />\n  //         <div className=\"text-center text-white\">\n  //           이미 계정이 있다면&nbsp;\n  //           <Link className=\"text-center text-white\" to=\"/signin\">\n  //             <i\n  //               className=\"fa-solid fa-right-to-bracket\"\n  //               style={{ color: \"#ffffff\" }}\n  //             ></i>\n  //             &nbsp;로그인하기\n  //           </Link>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   </section>\n  // </header>\n  ;\n};\n_s(SignUp, \"czwHssVPr1wVwbSz/bqVjv3KOzk=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Link","axios","jsxDEV","_jsxDEV","SignUp","_s","email","setEmail","name","setName","nickname","setNickname","password","setPassword","confirmPassword","setConfirmPassword","passwordsMatch","setPasswordsMatch","handleEmailChange","event","target","value","handleNameChange","handleNicknameChange","handlePasswordChange","handleConfirmPasswordChange","submitSignUp","preventDefault","response","post","withCredentials","console","log","error","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","onChange","htmlFor","to","style","color","_c","$RefreshReg$"],"sources":["C:/Users/한지나/Desktop/study_B/실습/wave/frontend/frontend1/src/components/SignUp.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const SignUp = () => {\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [passwordsMatch, setPasswordsMatch] = useState(true);\r\n\r\n//   const handlePasswordChange = (event) => {\r\n//     setPassword(event.target.value);\r\n//   };\r\n\r\n//   const handleConfirmPasswordChange = (event) => {\r\n//     setConfirmPassword(event.target.value);\r\n//   };\r\n\r\n//   const handlePasswordFormSubmit = (event) => {\r\n//     event.preventDefault(); //추가\r\n//     // 비밀번호와 비밀번호 확인이 일치하는지 확인합니다.\r\n//     const passwordsMatch = password === confirmPassword;\r\n\r\n//     setPasswordsMatch(passwordsMatch);\r\n//     if (passwordsMatch == true) {\r\n//       event.target.submit();\r\n//     } else {\r\n//       event.preventDefault();\r\n//     }\r\n//   };\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordsMatch, setPasswordsMatch] = useState(true);\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleNicknameChange = (event) => {\r\n    setNickname(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (event) => {\r\n    setConfirmPassword(event.target.value);\r\n  };\r\n\r\n  const submitSignUp = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const passwordsMatch = password === confirmPassword;\r\n    setPasswordsMatch(passwordsMatch);\r\n\r\n      if (passwordsMatch) {\r\n        try {\r\n          const response = await axios.post(\r\n            \"http://127.0.0.1:8080/api/members/signup\",\r\n            {\r\n              email: email,\r\n              password: password,\r\n              name: name,\r\n              nickname: nickname,\r\n            },\r\n            {\r\n              withCredentials: true, // CORS 에러 해결을 위해 withCredentials를 설정합니다.\r\n            }\r\n          );\r\n\r\n          // 서버에서 온 응답 처리\r\n          console.log(\"회원가입 성공!\", response);\r\n          // 여기서 성공 시의 처리를 추가하거나, 다른 페이지로 이동시킬 수 있습니다.\r\n        } catch (error) {\r\n          console.error(\"회원가입 실패!\", error.response);\r\n          // 여기서 에러 시의 처리를 추가하거나, 에러 메시지를 보여줄 수 있습니다.\r\n        }\r\n      }\r\n    // if (passwordsMatch) {\r\n    //   await fetch(\"http://127.0.0.1:8080/api/members/signup\", {\r\n    //     method: \"POST\",\r\n    //     mode:\"cors\",\r\n    //     credentials: \"include\",\r\n    //     headers: {\r\n    //       \"Content-Type\": \"application/json\",\r\n    //       \"Access-Control-Allow-Origin\": \"*\",\r\n    //     },\r\n    //     body: JSON.stringify({\r\n    //       email: email,\r\n    //       password: password,\r\n    //       name: name,\r\n    //       nickname: nickname,\r\n    //     }),\r\n    //   });\r\n    // }\r\n  };\r\n  return (\r\n    <header className=\"masthead\">\r\n      <section id=\"signup\" className=\"mt-7\">\r\n        <hr className=\"sign-divider-light\" />\r\n        <h2 className=\"text-center mt-0 text-white\">Sign Up</h2>\r\n        <hr className=\"sign-divider-light mb-5\" />\r\n\r\n        <div className=\"row gx-4 gx-lg-5 justify-content-center mb-5\">\r\n          <div className=\"col-lg-4\">\r\n            <form id=\"signup\" onSubmit={submitSignUp}>\r\n              {/* NAME input */}\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  name=\"name\" // name 속성을 추가해야 서버에서 구분할 수 있습니다.\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your name...\"\r\n                  required\r\n                  value={name} // 값을 state 변수로 설정해줍니다.\r\n                  onChange={handleNameChange} // name 값이 변경될 때마다 state 변수를 업데이트합니다.\r\n                />\r\n                <label htmlFor=\"name\">Full name</label>\r\n                <div\r\n                  className=\"invalid-feedback\"\r\n                  data-sb-feedback=\"name:required\"\r\n                >\r\n                  A name is required.\r\n                </div>\r\n              </div>\r\n\r\n              {/* EMAIL input */}\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  name=\"email\" // name 속성을 추가해야 서버에서 구분할 수 있습니다.\r\n                  type=\"email\"\r\n                  placeholder=\"Enter your Email...\"\r\n                  required\r\n                  value={email} // 값을 state 변수로 설정해줍니다.\r\n                  onChange={handleEmailChange} // name 값이 변경될 때마다 state 변수를 업데이트합니다.\r\n                />\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <div\r\n                  className=\"invalid-feedback\"\r\n                  data-sb-feedback=\"email:required\"\r\n                >\r\n                  An email is required.\r\n                </div>\r\n                <div\r\n                  className=\"invalid-feedback\"\r\n                  data-sb-feedback=\"email:email\"\r\n                >\r\n                  Email is not valid.\r\n                </div>\r\n              </div>\r\n\r\n              {/* NICKNAME input */}\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"nickname\"\r\n                  name=\"nickname\" // name 속성을 추가해야 서버에서 구분할 수 있습니다.\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your ID...\"\r\n                  required\r\n                  value={nickname} // 값을 state 변수로 설정해줍니다.\r\n                  onChange={handleNicknameChange} // name 값이 변경될 때마다 state 변수를 업데이트합니다.\r\n                />\r\n                <label htmlFor=\"nickname\">NICKNAME</label>\r\n                <div\r\n                  className=\"invalid-feedback\"\r\n                  data-sb-feedback=\"id:required\"\r\n                >\r\n                  An ID is required.\r\n                </div>\r\n              </div>\r\n\r\n              {/* PASSWORD input */}\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  name=\"password\" // name 속성을 추가해야 서버에서 구분할 수 있습니다.\r\n                  type=\"password\"\r\n                  placeholder=\"Enter your password...\"\r\n                  value={password}\r\n                  onChange={handlePasswordChange}\r\n                  required\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <div\r\n                  className=\"invalid-feedback\"\r\n                  data-sb-feedback=\"password:required\"\r\n                >\r\n                  A password is required.\r\n                </div>\r\n              </div>\r\n\r\n              {/* PASSWORD CONFIRM input */}\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\" // name 속성을 추가해야 서버에서 구분할 수 있습니다.\r\n                  type=\"password\"\r\n                  placeholder=\"Enter your password again...\"\r\n                  value={confirmPassword}\r\n                  onChange={handleConfirmPasswordChange}\r\n                  required\r\n                />\r\n                <label htmlFor=\"confirmPassword\">Password Check</label>\r\n                <div\r\n                  className=\"invalid-feedback\"\r\n                  data-sb-feedback=\"confirmPassword:required\"\r\n                >\r\n                  A password is required.\r\n                </div>\r\n              </div>\r\n\r\n              {!passwordsMatch && (\r\n                <p className=\"text-white text-center\">\r\n                  비밀번호와 비밀번호 확인이 일치하지 않습니다.\r\n                </p>\r\n              )}\r\n\r\n              {/* SUBMIT button */}\r\n              <div className=\"d-grid\">\r\n                <button\r\n                  className=\"btn btn-primary btn-xl\"\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                >\r\n                  Sign Up !\r\n                </button>\r\n              </div>\r\n            </form>{\" \"}\r\n            <br />\r\n            <div className=\"text-center text-white\">\r\n              이미 계정이 있다면&nbsp;\r\n              <Link className=\"text-center text-white\" to=\"/signin\">\r\n                <i\r\n                  className=\"fa-solid fa-right-to-bracket\"\r\n                  style={{ color: \"#ffffff\" }}\r\n                ></i>\r\n                &nbsp;로그인하기\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </header>\r\n\r\n    // <header className=\"masthead\">\r\n    //   <section id=\"signup\" className=\"mt-7\">\r\n    //     <hr className=\"sign-divider-light\" />\r\n    //     <h2 className=\"text-center mt-0 text-white\">Sign Up</h2>\r\n    //     <hr className=\"sign-divider-light mb-5\" />\r\n\r\n    //     <div className=\"row gx-4 gx-lg-5 justify-content-center mb-5\">\r\n    //       <div className=\"col-lg-4\">\r\n    //         <form id=\"signup\" onSubmit={submitSignUp}>\r\n    //           {/* ID input */}\r\n    //           <div className=\"form-floating mb-3\">\r\n    //             <input\r\n    //               className=\"form-control\"\r\n    //               id=\"name\"\r\n    //               type=\"text\"\r\n    //               placeholder=\"Enter your name...\"\r\n    //               required\r\n    //             />\r\n    //             <label htmlFor=\"name\">Full name</label>\r\n    //             <div\r\n    //               className=\"invalid-feedback\"\r\n    //               data-sb-feedback=\"name:required\"\r\n    //             >\r\n    //               A name is required.\r\n    //             </div>\r\n    //           </div>\r\n\r\n    //           {/* EMAIL input */}\r\n    //           <div className=\"form-floating mb-3\">\r\n    //             <input\r\n    //               className=\"form-control\"\r\n    //               id=\"email\"\r\n    //               type=\"email\"\r\n    //               placeholder=\"Enter your Email...\"\r\n    //               required\r\n    //             />\r\n    //             <label htmlFor=\"email\">Email address</label>\r\n    //             <div\r\n    //               className=\"invalid-feedback\"\r\n    //               data-sb-feedback=\"email:required\"\r\n    //             >\r\n    //               An email is required.\r\n    //             </div>\r\n    //             <div\r\n    //               className=\"invalid-feedback\"\r\n    //               data-sb-feedback=\"email:email\"\r\n    //             >\r\n    //               Email is not valid.\r\n    //             </div>\r\n    //           </div>\r\n\r\n    //           {/* ID input */}\r\n    //           <div className=\"form-floating mb-3\">\r\n    //             <input\r\n    //               className=\"form-control\"\r\n    //               id=\"id\"\r\n    //               type=\"text\"\r\n    //               placeholder=\"Enter your ID...\"\r\n    //               required\r\n    //             />\r\n    //             <label htmlFor=\"id\">ID</label>\r\n    //             <div\r\n    //               className=\"invalid-feedback\"\r\n    //               data-sb-feedback=\"id:required\"\r\n    //             >\r\n    //               An ID is required.\r\n    //             </div>\r\n    //           </div>\r\n\r\n    //           {/* PASSWORD input */}\r\n    //           <div className=\"form-floating mb-3\">\r\n    //             <input\r\n    //               className=\"form-control\"\r\n    //               id=\"password\"\r\n    //               type=\"password\"\r\n    //               placeholder=\"Enter your password...\"\r\n    //               value={password}\r\n    //               onChange={handlePasswordChange}\r\n    //               required\r\n    //             />\r\n    //             <label htmlFor=\"password\">Password</label>\r\n    //             <div\r\n    //               className=\"invalid-feedback\"\r\n    //               data-sb-feedback=\"password:required\"\r\n    //             >\r\n    //               A password is required.\r\n    //             </div>\r\n    //           </div>\r\n\r\n    //           {/* PASSWORD CONFIRM input */}\r\n    //           <div className=\"form-floating mb-3\">\r\n    //             <input\r\n    //               className=\"form-control\"\r\n    //               id=\"confirmPassword\"\r\n    //               type=\"password\"\r\n    //               placeholder=\"Enter your password again...\"\r\n    //               value={confirmPassword}\r\n    //               onChange={handleConfirmPasswordChange}\r\n    //               required\r\n    //             />\r\n    //             <label htmlFor=\"confirmPassword\">Password Check</label>\r\n    //             <div\r\n    //               className=\"invalid-feedback\"\r\n    //               data-sb-feedback=\"confirmPassword:required\"\r\n    //             >\r\n    //               A password is required.\r\n    //             </div>\r\n    //           </div>\r\n\r\n    //           {!passwordsMatch && (\r\n    //             <p className=\"text-white text-center\">\r\n    //               비밀번호와 비밀번호 확인이 일치하지 않습니다.\r\n    //             </p>\r\n    //           )}\r\n\r\n    //           {/* SUBMIT button */}\r\n    //           <div className=\"d-grid\">\r\n    //             <button\r\n    //               className=\"btn btn-primary btn-xl\"\r\n    //               id=\"submitButton\"\r\n    //               type=\"submit\"\r\n    //             >\r\n    //               Sign Up !\r\n    //             </button>\r\n    //           </div>\r\n    //         </form>{\" \"}\r\n    //         <br />\r\n    //         <div className=\"text-center text-white\">\r\n    //           이미 계정이 있다면&nbsp;\r\n    //           <Link className=\"text-center text-white\" to=\"/signin\">\r\n    //             <i\r\n    //               className=\"fa-solid fa-right-to-bracket\"\r\n    //               style={{ color: \"#ffffff\" }}\r\n    //             ></i>\r\n    //             &nbsp;로그인하기\r\n    //           </Link>\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n    //   </section>\r\n    // </header>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":"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;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAACnC,EAAA,CAnXID,MAAM;AAAA8C,EAAA,GAAN9C,MAAM;AAqXZ,eAAeA,MAAM;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}